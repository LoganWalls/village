@import "open-props/normalize";
@import "open-props/style";
/* Pulling this from a CDN because of a bug:
* https://github.com/argyleink/open-props/issues/431#issue-1955952470 */
@import "https://unpkg.com/open-props/animations.min.css";

@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

:root {
  /* Light theme */
  --user-color: var(--cyan-2);
  --ai-color: var(--violet-2);
  --ai-gradient: var(--gradient-26) var(--ai-color);

  /* Dark theme */
  @media (prefers-color-scheme: dark) {
    --user-color: var(--cyan-9);
    --ai-color: var(--violet-9);
    --ai-gradient: var(--gradient-17) var(--ai-color);
  }

  /* Common */
  --brand: var(var(--user-color));
  --ai-gradient-animation: gradient 5s ease infinite;
}

/* Make dark/light mode transition smooth */
html,
.textInput {
  transition: background-color 500ms var(--ease-1);
}

/* TODO: light + dark mode */
/* TODO: refactor so hljs outputs a custom component */
pre {
  padding: var(--size-3);
}
code {
  border-radius: var(--radius-2);
}

.App {
  padding: var(--size-fluid-2);
  height: 100vh;
}

.ChatWindow {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
}

.chatHistory {
  display: flex;
  flex-grow: 8;
  padding: var(--size-fluid-2);
  gap: var(--size-2);
  /* This keeps the messages scrolling as new content is added */
  flex-direction: column-reverse;
  overflow-y: scroll;
}

.ChatMessage {
  display: flex;
  flex-direction: column;
  width: fit-content;
  max-width: 80%;
  border-radius: var(--radius-3);
  padding: var(--size-fluid-2);
  /* fixes a positioning bug in iOS Safari */
  transform: translateZ(0);

  background-size: 400% 400%;

  &.ai {
    background-color: var(--ai-color);
    animation: var(--animation-slide-in-right);
  }
  &.user {
    background-color: var(--user-color);
    animation: var(--animation-slide-in-left);
    margin-left: auto;
  }
  animation-duration: 800ms;
}

.InputBar {
  display: flex;
  flex-direction: row;
  align-content: center;
  align-items: center;
  gap: var(--size-fluid-1);
  padding: var(--size-fluid-1);
  box-shadow: var(--shadow-1);
  border: var(--border-size-1) solid var(--surface-2);
  border-radius: var(--radius-3);
  &:focus,
  &:hover {
    outline: none !important;
    border-color: var(--surface-3);
    box-shadow: var(--shadow-2);
  }
  transition-duration: 500ms;
  transition-timing-function: var(--ease-1);
  transition-property: border-color, box-shadow;
}

.textInput {
  display: flex;
  resize: none;
  overflow: scroll;
  width: 100%;
  max-width: 100%;
  max-height: 40vh;
  background-color: var(--surface-1);
  &:focus {
    outline: none !important;
  }
}

.textSendIcon {
  --mask-url: url("./assets/send-icon.svg");
  height: var(--size-1);
  aspect-ratio: var(--ratio-square);
  padding: var(--size-2);
  mask: var(--mask-url);
  -webkit-mask: var(--mask-url);
  background-size: 400% 400%;
  animation: var(--ai-gradient-animation);
  background-color: var(--surface-2);
}

.textSendButton:not([disabled]) > .textSendIcon {
  background: var(--ai-gradient);
}

.textSendButton {
  --button-border: var(--border-size-2);
  position: relative;
  background-color: var(--surface-1);
  background-clip: padding-box;
  border: var(--button-border) solid transparent;
  border-radius: var(--radius-round);
  aspect-ratio: var(--ratio-square);
  height: "auto";
  padding: var(--size-2);
  box-shadow: var(--shadow-2);

  &:before {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1;
    margin: calc(0px - var(--button-border));
    border-radius: inherit;
    opacity: 1;
    background-size: 400% 400%;
    background: var(--ai-gradient);
    animation: var(--ai-gradient-animation);
    transition: opacity 500ms var(--ease-1);
  }
  &:disabled {
    box-shadow: unset;
    &:before {
      opacity: 0;
    }
  }
  transition-duration: 500ms;
  transition-delay: 300ms, 300ms, 0ms, 0ms;
  transition-timing-function: var(--ease-1);
  transition-property: opacity, border, background-color, box-shadow;
}
